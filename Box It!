#include<bits/stdc++.h>

using namespace std;
//Implement the class Box  
class Box{
//l,b,h are integers representing the dimensions of the box
int l,b,h;
// The class should have the following functions : 
public:
// Constructors: 
   Box(){
       l = 0;
       b = 0;
       h = 0;
   }
   Box(int x,int y,int z){
       l = x;
       b = y;
       h = z;
   }
   Box(const Box &B){
       l = B.l;
       b = B.b;
       h = B.h;
   }


   int getLength(){ // Return box's length
       return l;
   }
   int getBreadth (){
       return b;
    }// Return box's breadth
   int getHeight (){
       return h;
   } //Return box's height
   long long CalculateVolume(){
       return (long long) l*b*h;
   } // Return the volume of the box

//Overload operator < as specified
    bool operator<(const Box& B){
        if(B.l>l || (B.l==l && B.b>b) || (B.l==l && B.b==b && B.h>h))
           return true;
        else {
            return false;
        }
               
    }

//Overload operator << as specified
    friend ostream& operator<<(ostream &out,const Box &B){
        out<<B.l<<" "<<B.b<<" "<<B.h;
        return out;
    }
};


void check2()
{
	int n;
	cin>>n;
	Box temp;
	for(int i=0;i<n;i++)
	{
		int type;
		cin>>type;
		if(type ==1)
		{
			cout<<temp<<endl;
		}
		if(type == 2)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			temp=NewBox;
			cout<<temp<<endl;
		}
		if(type==3)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			if(NewBox<temp)
			{
				cout<<"Lesser\n";
			}
			else
			{
				cout<<"Greater\n";
			}
		}
		if(type==4)
		{
			cout<<temp.CalculateVolume()<<endl;
		}
		if(type==5)
		{
			Box NewBox(temp);
			cout<<NewBox<<endl;
		}

	}
}

int main()
{
	check2();
}
